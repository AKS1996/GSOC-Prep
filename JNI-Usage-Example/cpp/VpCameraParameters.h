/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_visp_core_VpCameraParameters */

#ifndef _Included_org_visp_core_VpCameraParameters
#define _Included_org_visp_core_VpCameraParameters
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    VpCameraParameters_0
 * Signature: (DDDDDD)J
 */
JNIEXPORT jlong JNICALL Java_org_visp_core_VpCameraParameters_VpCameraParameters_10
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    VpCameraParameters_1
 * Signature: (DDDD)J
 */
JNIEXPORT jlong JNICALL Java_org_visp_core_VpCameraParameters_VpCameraParameters_11
  (JNIEnv *, jclass, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    VpCameraParameters_2
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_visp_core_VpCameraParameters_VpCameraParameters_12
  (JNIEnv *, jclass);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    isFovComputed_0
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_visp_core_VpCameraParameters_isFovComputed_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    getHorizontalFovAngle_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_getHorizontalFovAngle_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    getVerticalFovAngle_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_getVerticalFovAngle_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_kdu_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_get_1kdu_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_kud_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_get_1kud_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_px_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_get_1px_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_px_inverse_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_get_1px_1inverse_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_py_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_get_1py_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_py_inverse_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_get_1py_1inverse_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_u0_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_get_1u0_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_v0_0
 * Signature: (J)D
 */
JNIEXPORT jdouble JNICALL Java_org_visp_core_VpCameraParameters_get_1v0_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    computeFov_0
 * Signature: (JII)V
 */
JNIEXPORT void JNICALL Java_org_visp_core_VpCameraParameters_computeFov_10
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    init_0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_visp_core_VpCameraParameters_init_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    initFromCalibrationMatrix_0
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_org_visp_core_VpCameraParameters_initFromCalibrationMatrix_10
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    initFromFov_0
 * Signature: (JIIDD)V
 */
JNIEXPORT void JNICALL Java_org_visp_core_VpCameraParameters_initFromFov_10
  (JNIEnv *, jclass, jlong, jint, jint, jdouble, jdouble);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    initPersProjWithDistortion_0
 * Signature: (JDDDDDD)V
 */
JNIEXPORT void JNICALL Java_org_visp_core_VpCameraParameters_initPersProjWithDistortion_10
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    initPersProjWithoutDistortion_0
 * Signature: (JDDDD)V
 */
JNIEXPORT void JNICALL Java_org_visp_core_VpCameraParameters_initPersProjWithoutDistortion_10
  (JNIEnv *, jclass, jlong, jdouble, jdouble, jdouble, jdouble);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    printParameters_0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_visp_core_VpCameraParameters_printParameters_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_K_0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_visp_core_VpCameraParameters_get_1K_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    get_K_inverse_0
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_visp_core_VpCameraParameters_get_1K_1inverse_10
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_visp_core_VpCameraParameters
 * Method:    delete
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_visp_core_VpCameraParameters_delete
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
